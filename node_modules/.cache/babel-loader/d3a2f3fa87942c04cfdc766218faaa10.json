{"ast":null,"code":"var _jsxFileName = \"/Users/tomaspintokramer/plataforma5/bootcamp22/checkpoint-TMDB-220101/src/store/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport themes from \"../utils/themes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  mode: \"light\",\n  // esta propeidad solo deberia poder tener 2 valores: 'light' y 'dark'\n  theme: themes.light,\n  // el set de temas actual\n  toggleTheme: () => null // esta función deberia togglear los temas\n\n};\nexport const ThemeContext = /*#__PURE__*/createContext(initialState);\nexport const ThemeContextProviider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [th, setTh] = useState({\n    mode: localStorage.getItem('theme') || \"light\",\n    theme: themes[localStorage.getItem('theme')] || themes.light\n  });\n\n  const toggleTheme = () => {\n    let toggle = th.mode == \"light\" ? \"dark\" : 'light';\n    setTh({\n      mode: toggle,\n      theme: themes[toggle]\n    });\n    localStorage.setItem('theme', toggle);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: { ...th,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 11\n  }, this);\n};\n\n_s(ThemeContextProviider, \"NVvqPwAmAdbVJ/ulMiOmsJJWuBY=\");\n\n_c = ThemeContextProviider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeContextProviider\");","map":{"version":3,"sources":["/Users/tomaspintokramer/plataforma5/bootcamp22/checkpoint-TMDB-220101/src/store/context/AuthContext.js"],"names":["createContext","useState","themes","initialState","mode","theme","light","toggleTheme","ThemeContext","ThemeContextProviider","children","th","setTh","localStorage","getItem","toggle","setItem"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,OADW;AACF;AACfC,EAAAA,KAAK,EAAEH,MAAM,CAACI,KAFG;AAEI;AACrBC,EAAAA,WAAW,EAAE,MAAM,IAHF,CAGQ;;AAHR,CAArB;AAMA,OAAO,MAAMC,YAAY,gBAAGR,aAAa,CAACG,YAAD,CAAlC;AAEP,OAAO,MAAMM,qBAAqB,GAAC,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAC7C,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAYX,QAAQ,CAAC;AACvBG,IAAAA,IAAI,EAAES,YAAY,CAACC,OAAb,CAAqB,OAArB,KAA+B,OADd;AAEvBT,IAAAA,KAAK,EAAEH,MAAM,CAACW,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAN,IAAuCZ,MAAM,CAACI;AAF9B,GAAD,CAA1B;;AAKA,QAAMC,WAAW,GAAG,MAAK;AACrB,QAAIQ,MAAM,GAAEJ,EAAE,CAACP,IAAH,IAAS,OAAT,GAAkB,MAAlB,GAAyB,OAArC;AAEAQ,IAAAA,KAAK,CAAC;AACFR,MAAAA,IAAI,EAACW,MADH;AAEFV,MAAAA,KAAK,EAACH,MAAM,CAACa,MAAD;AAFV,KAAD,CAAL;AAIAF,IAAAA,YAAY,CAACG,OAAb,CAAqB,OAArB,EAA8BD,MAA9B;AACH,GARD;;AAWF,sBAAQ,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,EAAE,GAAGJ,EAAL;AAASJ,MAAAA;AAAT,KAA9B;AAAA,cAAuDG;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAR;AACD,CAlBM;;GAAMD,qB;;KAAAA,qB","sourcesContent":["import { createContext, useState } from \"react\";\nimport themes from \"../utils/themes\";\n\n\nconst initialState = {\n    mode: \"light\", // esta propeidad solo deberia poder tener 2 valores: 'light' y 'dark'\n    theme: themes.light, // el set de temas actual\n    toggleTheme: () => null, // esta función deberia togglear los temas\n  };\n  \nexport const ThemeContext = createContext(initialState);\n\nexport const ThemeContextProviider=({children})=>{\n    const [th, setTh]=useState({\n        mode: localStorage.getItem('theme')||\"light\", \n        theme: themes[localStorage.getItem('theme')]||themes.light,\n    })\n\n    const toggleTheme = () =>{\n        let toggle= th.mode==\"light\"? \"dark\":'light'\n        \n        setTh({\n            mode:toggle,\n            theme:themes[toggle]\n        })\n        localStorage.setItem('theme', toggle)\n    };\n\n\n  return( <ThemeContext.Provider value={{ ...th, toggleTheme }}>{children}</ThemeContext.Provider>)\n}"]},"metadata":{},"sourceType":"module"}